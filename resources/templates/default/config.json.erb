<% mon = 0 %>
{
  "sensors":
  [
<% if !@managers.nil? and @managers.size>0 and @manager_index>=0 and !@managers[(@manager_index+1) % @managers.size].nil? and !@managers[(@manager_index+1) % @managers.size]["redborder"].nil? and !@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"].nil? and !@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"]["internal_bond"].nil? and !@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"][@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"]["internal_bond"]].nil? and !@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"][@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"]["internal_bond"]]["ip"].nil? %>
    {
      "timeout":5,
      "sensor_name": "<%= @managers[(@manager_index+1) % @managers.size].name %>",
      "sensor_ip": "<%= @managers[(@manager_index+1) % @managers.size]["redborder"]["manager"][@managers[(@manager_index+1) % @managers.size]["redborder"]["manager"]["internal_bond"]]["ip"] %>",
      "community" : "red",
      "snmp_version": "2c",
      "monitors": 
      [
        {"name": "latency"  , "system": "nice -n 19 fping -q -s <%= @managers[(@manager_index+1) % @managers.size].name %> 2>&1| grep 'avg round trip time'|awk '{print $1}'", "unit": "ms"},
        {"name": "pkts_lost", "system": "sudo /bin/nice -n 19 /usr/sbin/fping -p 1 -c 10 <%= @managers[(@manager_index+1) % @managers.size].name %> 2>&1 | tail -n 1 | awk '{print $5}' | sed 's/%.*$//' | tr '/' ' ' | awk '{print $3}'", "unit": "%"},
        {"name": "pkts_percent_rcv", "op": "100 - pkts_lost", "unit": "%"}
      ]
    },
<% mon = mon + 3 %>
<% end %> 
<% if @manager_services["hadoop_resourcemanager"] %>
    {
      "timeout":5,
      "sensor_name": "resourcemanager",
      "sensor_ip": "<%= @ipsync %>",
      "community" : "redBorder",
      "snmp_version": "2c",
      "monitors": 
      [
        {"name": "yarn_memory"      , "system": "", "unit": "%",     "integer": 1},
        {"name": "yarn_apps_pending", "system": "", "unit": "tasks", "integer": 1}
      ]
    },
<% mon = mon + 2 %>
<% end %>
<% if @manager_services["druid_overlord"] %>
    {
      "timeout":5,
      "sensor_name": "overlord",
      "sensor_ip": "<%= @ipsync %>",
      "community" : "redBorder",
      "snmp_version": "2c",
      "monitors": 
      [
        {"name": "pending_tasks"   , "system": "", "unit": "tasks", "integer": 1},
        {"name": "running_capacity", "system": "", "unit": "task%", "integer": 1},
        {"name": "desired_capacity", "system": "", "unit": "task%", "integer": 1}
      ]
    },
<% mon = mon + 3 %>
<% end %>
<% if @manager_services["druid_coordinator"] %>
    {
      "timeout":5,
      "sensor_name": "coordinator",
      "sensor_ip": "<%= @ipsync %>",
      "community" : "redBorder",
      "snmp_version": "2c",
      "monitors": 
      [
        {"name": "hot_tier_capacity"    , "system": "", "unit": "%", "integer": 1},
        {"name": "default_tier_capacity", "system": "", "unit": "%", "integer": 1}
      ]
    },
<% mon = mon + 2 %>
<% end %>
<% if !@ipsync.nil? %>
    {
      "timeout":5,
      "sensor_name": "<%= node.name %>",
      "sensor_ip": "<%= node["redborder"]["cluster_info"]["#{node.name}"]["ip"] %>",
      "community" : "redborder",
      "snmp_version": "2c",
      "monitors": 
      [
<% if @manager_services["druid_middleManager"] %>
        {"name": "running_tasks", "system": "", "unit": "tasks", "integer": 1},
<% mon = mon + 1 %>
<% end %>
        /* OID extracted from http://www.debianadmin.com/linux-snmp-oids-for-cpumemory-and-disk-statistics.html */
<% if @monitors.nil? or @monitors.include?("load_1") %>
        {"name": "load_1", "oid": "UCD-SNMP-MIB::laLoad.1", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("cpu") %>
        {"name": "cpu_idle", "oid":"UCD-SNMP-MIB::ssCpuIdle.0", "unit":"%", "send": 0, "unit": "%"},
        {"name": "cpu", "op":"100-cpu_idle", "unit":"%"},
<% mon = mon + 2 %>
<% end %>
        
<% if @monitors.nil? or @monitors.include?("memory") or @monitors.include?("memory_buffer") or @monitors.include?("memory_cache")  %>
        {"name": "memory_total", "oid": "UCD-SNMP-MIB::memTotalReal.0", "send": 0, "unit": "kB" },
        {"name": "memory_free",  "oid": "UCD-SNMP-MIB::memAvailReal.0", "send": 0, "unit": "kB" },
        {"name": "memory_total_buffer", "oid": "UCD-SNMP-MIB::memBuffer.0", "send": 0, "unit": "kB" },
        {"name": "memory_total_cache", "oid": "UCD-SNMP-MIB::memCached.0", "send": 0, "unit": "kB" },
<% if @monitors.nil? or @monitors.include?("memory") %>
        {"name": "memory", "op": "100*(memory_total-memory_free-memory_total_buffer-memory_total_cache)/memory_total", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("memory_buffer") %>
        {"name": "memory_buffer", "op": "100*memory_total_buffer/memory_total", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("memory_cache") %>
        {"name": "memory_cache", "op": "100*memory_total_cache/memory_total", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% mon = mon + 4 %>
<% end %>

<% if @monitors.nil? or @monitors.include?("swap") %>
<% if !node["memory"].nil? and !node["memory"]["swap"].nil? and !node["memory"]["swap"]["total"].nil? and node["memory"]["swap"]["total"].to_i>0 %>
        {"name": "swap_total", "oid": "UCD-SNMP-MIB::memTotalSwap.0", "send": 0, "unit": "kB", "integer": 1 },
        {"name": "swap_free",  "oid": "UCD-SNMP-MIB::memAvailSwap.0", "send": 0, "unit": "kB", "integer": 1 },
        {"name": "swap",  "op": "100*(swap_total-swap_free)/swap_total", "unit": "%"},
<% mon = mon + 3 %>
<% end %>
<% end %>

        /* includeAllDisks 10% must be present in snmpd.conf */
<% if !@monitors.nil? and @monitors.include?("avio") %>
        {"name": "avio", "system": "atop 2 2 |grep avio |  awk '{print $15}' | paste -s -d'+' | sed 's/^/scale=3; (/' | sed 's|$|)/2|' | bc", "unit": "ms"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("disk") %>
        {"name": "disk", "oid": "UCD-SNMP-MIB::dskPercent.1", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("disk_load") %>
        {"name": "disk_load", "system": "snmptable -v 2c -c redBorder 127.0.0.1 diskIOTable|grep ' dm-0 ' | awk '{print $7}'", "unit": "%"},
<% mon = mon + 1 %>
<% end %>

<% if node["redborder"]["manager"]["hd_services_current"]["kafka"] and  File.exist?"/tmp/kafka" %>
        {"name": "kafka_disk_cached_pages", "system": "", "unit": "%"},
        {"name": "cache_hits", "system": "", "unit": "%"},
<% mon = mon + 2 %>
<% end %>

<% if File.exist?"/dev/mapper/vg_rbdata-lv_aggregated" %>
<% if @monitors.nil? or @monitors.include?("disk_aggregated") %>
        {"name": "disk_aggregated",  "oid": "UCD-SNMP-MIB::dskPercent.2", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("disk_aggregated_load") %>
        {"name": "disk_aggregated_load", "system": "snmptable -v 2c -c redBorder 127.0.0.1 diskIOTable|grep ' dm-1 ' | awk '{print $7}'", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if File.exist?"/dev/mapper/vg_rbdata-lv_raw" %>
<% if @monitors.nil? or @monitors.include?("disk_raw") %>
        {"name": "disk_raw", "oid": "UCD-SNMP-MIB::dskPercent.3", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("disk_raw_load") %>
        {"name": "disk_raw_load", "system": "snmptable -v 2c -c redBorder 127.0.0.1 diskIOTable|grep ' dm-2 ' | awk '{print $7}'", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% end %>
<% elsif File.exist?"/dev/mapper/vg_rbdata-lv_raw" %>
<% if @monitors.nil? or @monitors.include?("disk_raw") %>
        {"name": "disk_raw", "oid": "UCD-SNMP-MIB::dskPercent.2", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("disk_raw_load") %>
        {"name": "disk_raw_load", "system": "snmptable -v 2c -c redBorder 127.0.0.1 diskIOTable|grep ' dm-1 ' | awk '{print $7}'", "unit": "%"},
<% mon = mon + 1 %>
<% end %>
<% end %>
<% if File.exist?"/dev/ipmi0" or File.exist?"/dev/ipmi/0" or File.exist?"/dev/ipmidev/0" %>
<% if @monitors.nil? or @monitors.include?("system_temp") %>
        {"name": "system_temp",      "system": "", "unit": "celsius", "integer": 1},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("peripheral_temp") %>
        {"name": "peripheral_temp",  "system": "", "unit": "celsius", "integer": 1},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("pch_temp") %>
        {"name": "pch_temp",         "system": "", "unit": "celsius", "integer": 1},
<% mon = mon + 1 %>
<% end %>
<% if @monitors.nil? or @monitors.include?("fan") %>
        {"name": "fan",              "system": "", "unit": "rpm", "name_split_suffix":"_per_instance", "split":";", "split_op":"mean", "instance_prefix":"fan-", "integer": 1},
<% mon = mon + 1 %>
<% end %>
<% end %>

        /* Memory per service */
<% ["druid_broker", "druid_coordinator", "druid_historical", "druid_middleManager", "druid_overlord", "druid_realtime", "http2k", "kafka", "n2klocd", "nmspd", "nprobe", "postgresql", "rb-enrich", "rb-webui", "zookeeper"].each do |x| %>
<% if @manager_services[x] %>
        {"name": "memory_total_<%= x.gsub("-", "_") %>", "system": "", "unit": "kB", "integer": 1, "send": 0 },
        {"name": "memory_<%= x.gsub("-", "_") %>", "op": "100*(memory_total_<%= x.gsub("-", "_") %>)/memory_total", "unit": "%"},
<% mon = mon + 2 %>
<% end %>
<% end %>

      ]
    },
    /* Remote sensors monitored on any managers */
<% if !@flow_nodes.nil? and @managers.size>0 %>
<% @flow_nodes.each_with_index do |fnode, findex| %>
<% inserted={} %>
<% if !fnode["redborder"]["monitors"].nil? and !fnode["ipaddress"].nil? and fnode["redborder"]["parent_id"].nil? %>
<% if (findex%@managers.size != @manager_index and !fnode["redborder"].nil? and fnode["redborder"]["monitors"].size>0) %>
    /* NODE: <%= fnode["rbname"].nil? ? fnode.name : fnode["rbname"] %>     Monitors: <%= fnode["redborder"]["monitors"].size %> */
    {
      "timeout":5,
      "sensor_name": "<%= fnode["rbname"].nil? ? fnode.name : fnode["rbname"] %>",
      "sensor_ip": "<%= fnode["ipaddress"] %>",
      "community" : "<%= (fnode["redborder"]["snmp_community"].nil? or fnode["redborder"]["snmp_community"]=="") ? "public" : fnode["redborder"]["snmp_community"].to_s %>",
      "snmp_version" : "<%= (fnode["redborder"]["snmp_version"].nil? or fnode["redborder"]["snmp_version"]=="") ? "2c" : fnode["redborder"]["snmp_version"].to_s %>",
      "enrichment":{
          "sensor_name": "<%= fnode["rbname"].nil? ? fnode.name : fnode["rbname"] %>"
<% ["sensor_uuid", "deployment", "deployment_uuid", "namespace", "namespace_uuid", "market", "market_uuid", "organization", "organization_uuid", "service_provider", "service_provider_uuid", "campus", "campus_uuid", "building", "building_uuid", "floor", "floor_uuid" ].each do |ss| %>
<% if !fnode["redborder"][ss].nil? and fnode["redborder"][ss]!="" %>
          ,"<%= ss %>": "<%= fnode["redborder"][ss] %>"
<% end %>
<% end %>
      },
      "monitors": 
      [
<% if !fnode.nil? and !fnode["redborder"].nil? and !fnode["redborder"]["monitors"].nil? %>
<% fnode["redborder"]["monitors"].each do |monit| %>
<% if inserted[monit["name"]].nil? and (@monitors.nil? or @monitors.include?(monit["name"])) %>
<% send_kafka=false %>
<% fnode["redborder"]["monitors"].each do |monit2| %>
<% send_kafka=true if (monit2["name"] == monit["name"] and monit2["kafka"].nil? or monit2["kafka"]=="1" or monit2["kafka"]==1 or monit2["kafka"]==true) %>
<% end %>
<% keys = monit.keys.sort; keys.delete("name"); keys.delete("kafka"); keys.insert(0, "name") %>
        {<% keys.each_with_index do |k, i| %><%= ( (i!=0) ? ", " : "" ) %>"<%= k %>": "<%= monit[k].to_s.gsub("%sensor_ip", fnode["ipaddress"]).gsub("%snmp_community", (fnode["redborder"]["snmp_community"].nil? or fnode["redborder"]["snmp_community"]=="") ? "public" : fnode["redborder"]["snmp_community"].to_s).gsub("%telnet_user", fnode["redborder"]["telnet_user"].nil? ? "" : fnode["redborder"]["telnet_user"] ).gsub("%telnet_password", fnode["redborder"]["telnet_password"].nil? ? "" : fnode["redborder"]["telnet_password"] ) %>"<% end %>, "send": <%= send_kafka ? "1" : "0" %> },
<% inserted[monit["name"]]=true %>
<% end %>
<% end %>
      ]
    },
<% else %>
    /* NODE: <%= fnode["rbname"].nil? ? fnode.name : fnode["rbname"] %>     Monitors: <%= fnode["redborder"]["monitors"].size %>   (not on this manager) */
<% end %>
<% end %>
<% end %>
<% end %>
<% end %>
<% end %>
    /* DEVICES SENSORS */
<% if !@device_nodes.nil? and @managers.size>0 %>
<% @device_nodes.each_with_index do |dnode, dindex| %>
<% inserted={} %>
<% if !dnode["redBorder"]["monitors"].nil? and !dnode["ipaddress"].nil? and dnode["redBorder"]["parent_id"].nil? %>
<% if (dindex%@managers.size != @manager_index and !dnode["redBorder"].nil? and dnode["redBorder"]["monitors"].size>0) %>
    /* NODE: <%= dnode["rbname"].nil? ? dnode.name : dnode["rbname"] %>     Monitors: <%= dnode["redBorder"]["monitors"].size %> */
    {
      "timeout":5,
      "sensor_name": "<%= dnode["rbname"].nil? ? dnode.name : dnode["rbname"] %>",
      "sensor_ip": "<%= dnode["ipaddress"] %>",
      "community" : "<%= (dnode["redborder"]["snmp_community"].nil? or dnode["redborder"]["snmp_community"]=="") ? "public" : dnode["redborder"]["snmp_community"].to_s %>",
      "snmp_version" : "<%= (dnode["redborder"]["snmp_version"].nil? or dnode["redborder"]["snmp_version"]=="") ? "2c" : dnode["redborder"]["snmp_version"].to_s %>",
      "enrichment":{
          "sensor_name": "<%= dnode["rbname"].nil? ? dnode.name : dnode["rbname"] %>"
<% ["sensor_uuid", "deployment", "deployment_uuid", "namespace", "namespace_uuid", "market", "market_uuid", "organization", "organization_uuid", "service_provider", "service_provider_uuid", "campus", "campus_uuid", "building", "building_uuid", "floor", "floor_uuid" ].each do |ss| %>
<% if !dnode["redBorder"][ss].nil? and dnode["redBorder"][ss]!="" %>
          ,"<%= ss %>": "<%= dnode["redBorder"][ss] %>"
<% end %>
<% end %>
      },
      "monitors": 
      [
<% if !dnode.nil? and !dnode["redBorder"].nil? and !dnode["redBorder"]["monitors"].nil? %>
<% dnode["redBorder"]["monitors"].each do |monit| %>
<% if inserted[monit["name"]].nil? and (@monitors.nil? or @monitors.include?(monit["name"]) or monit["name"].start_with? "custom_") %>
<% send_kafka=false %>
<% dnode["redBorder"]["monitors"].each do |monit2| %>
<% send_kafka=true if (monit2["name"] == monit["name"] and (monit2["send"].nil? or monit2["send"]==1 or monit2["send"]==true)) %>
<% end %>
<% get_sensor="rb_get_sensor" %>
<% keys = monit.keys.sort; keys.delete("name"); keys.delete("send"); keys.insert(0, "name") %>
        {<% keys.each_with_index do |k, i| %><%= ( (i!=0) ? ", " : "" ) %>"<%= k %>": "<%= monit[k].to_s.gsub("%sensor_ip", dnode["ipaddress"]).gsub("%snmp_community", (dnode["redborder"]["snmp_community"].nil? or dnode["redborder"]["snmp_community"]=="") ? "public" : dnode["redborder"]["snmp_community"].to_s).gsub("%telnet_user", dnode["redborder"]["telnet_user"].nil? ? "" : dnode["redborder"]["telnet_user"] ).gsub("%telnet_password", dnode["redborder"]["telnet_password"].nil? ? "" : dnode["redborder"]["telnet_password"] ).gsub("rb_get_sensor.sh", (dnode["redborder"]["protocol"] == "IPMI" and !dnode["redborder"]["rest_api_user"].nil? and !dnode["redborder"]["rest_api_password"].nil?) ? "rb_get_sensor.sh -i #{dnode["redborder"]["ipaddress"]} -u #{dnode["redborder"]["rest_api_user"]} -p #{dnode["redborder"]["rest_api_password"]}" : "rb_get_sensor.sh" ).gsub("rb_get_redfish.sh", (dnode["redborder"]["protocol"] == "Redfish" and !dnode["redborder"]["rest_api_user"].nil? and !dnode["redborder"]["rest_api_password"].nil?) ? "rb_get_redfish.sh -i #{dnode["redborder"]["ipaddress"]} -u #{dnode["redborder"]["rest_api_user"]} -p #{dnode["redborder"]["rest_api_password"]}" : "rb_get_redfish.sh" )%>"<% end %>, "send": <%= send_kafka ? "1" : "0" %> },
<% inserted[monit["name"]]=true %>
<% mon = mon + 1 %>
<% end %>
<% end %>
      ]
    },
<% else %>
    /* NODE: <%= dnode["rbname"].nil? ? dnode.name : dnode["rbname"] %>     Monitors: <%= dnode["redBorder"]["monitors"].size %>   (not on this manager) */
<% end %>
<% end %>
<% end %>

<% end %>
<% end %>
  ],
  "conf": {
    "debug": 100,
    "stdout": 1,
    "syslog": 0,
    "threads": <%= [mon/8, 5].min %>,
    "timeout": 40,
    "max_snmp_fails": 2,
    "max_kafka_fails": 2,
    "sleep_main_thread": 50,
    "sleep_worker_thread": 5,
    "kafka_broker":"kafka.service",
    "kafka_topic": "rb_monitor",
    "kafka_timeout": 2
  }
}
